useradd student


1. useradd -G wheel ansible
2. sudo dnf install ansible-core git
3. vim inventory --> prod, dev, certif
4. add user ansible to remote hosts
5. make sure to ssh to each host to add host_key
6. ansible -i inventory all -u admin -k -b -K -m command -a "useradd ansible"
7. ansible -i inventory all -u admin -k -b -K -m user -a "name=ansible state=present"
8. ansible -i inventory all -u admin -k -b -K -m shell -a "echo password | passwd --stdin ansible"
9. ansible -i inventory all -u student -k -b -K -m copy -a 'content="ansible ALL=(ALL) NOPASSWD: ALL" dest=/etc/sudoers.d/ansible'
10. ansible -i inventory all -u ansible -k -b -m command -a " ls -ltr /root"
11. git clone https://github.com/sandervanvugt/ansiblein3weeks.git
12. ssh-keygen
     ssh-copy-id prod
     ssh-copy-id dev
     ssh-copy-id certif
13.  ansible all -a "ls -ltr /root"
14.  ansible-doc -l | less

ansible.builtin.debconf                Configure a .deb package
ansible.builtin.debug                  Print statements during execution
ansible.builtin.dnf                    Manages packages with the `dnf' pack...
ansible.builtin.dpkg_selections        Dpkg package selection selections
ansible.builtin.expect                 Executes a command and responds to p...
ansible.builtin.fail                   Fail with custom message
ansible.builtin.fetch                  Fetch files from remote nodes
ansible.builtin.file                   Manage files and file properties
ansible.builtin.find                   Return a list of files based on spec...
ansible.builtin.gather_facts           Gathers facts about remote hosts
ansible.builtin.get_url                Downloads files from HTTP, HTTPS, or...
ansible.builtin.getent                 A wrapper to the unix getent utility
ansible.builtin.git                    Deploy software (or files) from git ...
ansible.builtin.group                  Add or remove groups
ansible.builtin.group_by               Create Ansible groups based on facts
ansible.builtin.hostname               Manage hostname
ansible.builtin.import_playbook        Import a playbook
ansible.builtin.import_role            Import a role into a play
ansible.builtin.import_tasks           Import a task list
ansible.builtin.include_role           Load and execute a role
ansible.builtin.include_tasks          Dynamically include a task list
ansible.builtin.include_vars           Load variables from files, dynamical...
ansible.builtin.iptables               Modify iptables rules
ansible.builtin.known_hosts            Add or remove a host from the `known...
ansible.builtin.lineinfile             Manage lines in text files
ansible.builtin.meta                   Execute Ansible 'actions'
ansible.builtin.package                Generic OS package manager
ansible.builtin.package_facts          Package information as facts
ansible.builtin.pause                  Pause playbook execution
ansible.builtin.ping                   Try to connect to host, verify a usa...
ansible.builtin.pip                    Manages Python library dependencies
ansible.builtin.raw                    Executes a low-down and dirty comman...
ansible.builtin.reboot                 Reboot a machine
ansible.builtin.replace                Replace all instances of a particula...
ansible.builtin.rpm_key                Adds or removes a gpg key from the r...
ansible.builtin.script                 Runs a local script on a remote node...
ansible.builtin.service                Manage services
ansible.builtin.service_facts          Return service state information as ...
ansible.builtin.set_fact               Set host variable(s) and fact(s)
ansible.builtin.set_stats              Define and display stats for the cur...
ansible.builtin.setup                  Gathers facts about remote hosts
ansible.builtin.shell                  Execute shell commands on targets
ansible.builtin.slurp                  Slurps a file from remote nodes
ansible.builtin.stat                   Retrieve file or file system status
ansible.builtin.subversion             Deploys a subversion repository
ansible.builtin.systemd                Manage systemd units
ansible.builtin.systemd_service        Manage systemd units
ansible.builtin.sysvinit               Manage SysV services
ansible.builtin.tempfile               Creates temporary files and director...
ansible.builtin.template               Template a file out to a target host
ansible.builtin.unarchive              Unpacks an archive after (optionally...
ansible.builtin.uri                    Interacts with webservices
ansible.builtin.user                   Manage user accounts
ansible.builtin.validate_argument_spec Validate role argument specs
ansible.builtin.wait_for               Waits for a condition before continu...
ansible.builtin.wait_for_connection    Waits until remote system is reachab...
ansible.builtin.yum                    Manages packages with the `yum' pack...
ansible.builtin.yum_repository         Add or remove YUM repositories

15. [ansible@prod ansible]$ cat ansible.cfg
[defaults]
inventory = inventory
remote_user = ansible
host_key_checking = false

[privilege_escalation]
become = True
become_method = sudo
become_user = root
become_ask_pass = False

16. [ansible@prod ~]$ cat vsftpd.yaml
- name: run vsftpd
  hosts: centos
  tasks:

    - name: install vsftpd
      debug:
        msg: installing vsftpd
    - name: start and enable vsftpd
      debug:
        msg: starting and enabling vsftpd
    - name: open firewall ports
      debug:
        msg: opening firewall in ports

17. install firewalld collection

ansible-galaxy collection install ansible.posix

18. [ansible@prod ~]$ cat vsftpd.yaml
- name: run vsftpd
  hosts: all
  tasks:

    - name: install vsftpd
      dnf:
        name: vsftpd
    - name: start and enable vsftpd
      service:
        name: vsftpd
        state: started
        enabled: yes
    - name: open firewall ports
      firewalld:
        service: ftp
        immediate: yes
        permanent: yes
        state: enabled

19.

---
- name: create a user using a variable
  hosts: all
  vars:
    user: lisa
  tasks:
    - name: create a user {{ user }} on host {{ ansible_hostname }}
      user:
        name: "{{ user }}"

20.

---
- name: show fact gathering
  hosts: all
  tasks:
  - name: show all facts
    debug:
      var: ansible_facts

---
- name: show fact gathering
  hosts: all
  gather_facts:no

  tasks:
  - name: gather facts
    setup:
  - name: show all facts
    debug:
      var: ansible_facts

---
- hosts: all
  tasks:
  - name: show IP address
    debug:
      msg: >
        This host uses IP address {{ ansible_facts['default_ipv4']['address'] }}
  - name: show IP adress - new and deprecated
    debug:
      msg: This host uses IP address {{ ansible_facts.default_ipv4.address }}
  - name: again - old notation one
    debug:
      msg: This host uses {{ ansible_default_ipv4['address'] }}
  - name: again - old an soooo deprecated
    debug:
      msg: This host uses {{ ansible_default_ipv4.address }}

21.

[ansible@prod ~]$ cat myvars.yaml
mypackage: nmap
myftpservice: vsftpd
myfileservice: smb

[ansible@prod ~]$ cat vars_file.yaml
---
- name: using a variable include file
  hosts: rhfamily
  vars_files: myvars.yaml
  tasks:
  - name: install package {{ package }}
    yum:
      name: "{{ mypackage }}"
      state: latest

22.
install web server and service for centos & ubuntu using group vars

---
- name: install start and enable httpd
  hosts: all
  tasks:
  - name: install package {{ package }}
    package:
      name: {{ package }}
      state: latest
  - name: start and enable service {{ service}
    service:
      name: {{ package }}
      state: started
      enabled: yes


 vim group_vars/rhfamily.yaml
 vim group_vars/ubuntu.yaml 


